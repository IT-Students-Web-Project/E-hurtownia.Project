@{
    ViewData["Title"] = "Product info";
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script type="text/javascript">
    $(function () {
        $(document).on("show.bs.modal", "#addToCartModal", function (event) {
            var productQuantity = $("#addToCartQuantity").val();
            var productID = $("#addToCartProductID").val();
            var productMaxQTY = $("#addToCartProductMaxQTY").val();

            if (productQuantity < 1 || Number.isInteger(Number(productQuantity)) == false) {
                $("#addToCartModalBody").text("Invalid amount of product, please select correct value, non-negative and integers only");

                $("#addToCartModalButton").attr("type", "button");
                $("#addToCartModalButton").attr("data-dismiss", "modal");

                $("#addToCartModalButton").addClass("btn-secondary", "button");
                $("#addToCartModalButton").removeClass("btn-success", "button");
            } else if (productQuantity > productMaxQTY) {
                $("#addToCartModalBody").text("Entered quantity exceeds total available product amount");

                $("#addToCartModalButton").attr("type", "button");
                $("#addToCartModalButton").attr("data-dismiss", "modal");

                $("#addToCartModalButton").addClass("btn-secondary", "button");
                $("#addToCartModalButton").removeClass("btn-success", "button");
            } else {
                $("#form-product-id").val(productID);
                $("#form-product-qty").val(productQuantity);

                $("#addToCartModalBody").text("Product has been added to your shopping cart");

                $("#addToCartModalButton").attr("type", "submit");
                $("#addToCartModalButton").removeAttr("data-dismiss");

                $("#addToCartModalButton").addClass("btn-success", "button");
                $("#addToCartModalButton").removeClass("btn-secondary", "button");
            }
        });
    });
</script>

<!-- MODAL DIALOG SECTION -->

<div class="modal fade" id="addToCartModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body" id="addToCartModalBody">

            </div>

            <div class="modal-footer">
                <form method="post">
                    <input type="hidden" name="product-id" id="form-product-id" />
                    <input type="hidden" name="product-qty" id="form-product-qty" />

                    <input type="submit" class="btn" id="addToCartModalButton" value="OK" asp-controller="Customer" asp-action="Buy" />
                </form>
            </div>
        </div>
    </div>
</div>

<!-- END OF MODAL DIALOG SECTION -->

@if (ViewBag.Product is Products && ViewBag.Stocks is List<Stocks> && ViewBag.Units is List<Units>) {
    Products product = ViewBag.Product;
    List<Stocks> stocks = ViewBag.Stocks;
    List<Units> units = ViewBag.Units;
    String shortUnitName = units.Where(unit => unit.IdUnit == product.FkUnit).Single().ShortName;
    int totalUnitsAvailable = stocks.Where(stock => stock.FkProduct == product.IdProduct).Where(stock => stock.Status == true).Sum(stock => stock.Amount);

    <div class="container col-10">
        <div class="row">
            <div class="col text-left">
                <h1>Buy a product</h1>
                <h3>@product.Name</h3>

                <hr />
                <h5>Product info</h5>

                <ul>
                    <li>Database ID - @product.IdProduct</li>
                    <li>Base price per unit - @product.BasePricePerUnit.ToString("F2") €</li>
                    <li>Product unit - @units.Where(unit => unit.IdUnit == product.FkUnit).Single().Name (UID @product.FkUnit)</li>

                    @if (totalUnitsAvailable > 0) {
                        <li>
                            Total units available - @totalUnitsAvailable @shortUnitName

                            <ul>
                                @foreach (Stocks stock in stocks.Where(stock => stock.FkProduct == product.IdProduct && stock.Status == true)) {
                                    <li>
                                        @stock.Amount @shortUnitName available in storehouse with ID @stock.FkStorehouse
                                    </li>
                                }
                            </ul>

                        </li>
                    } else {
                        <li>Total units available - 0 @shortUnitName</li>
                    }
                </ul>
            </div>
            <div class="col-2 text-right">
                <img class="img-fluid" src="@product.ImgFile" />
            </div>
        </div>

        <div class="row">
            <div class="col-12 d-flex flex-row-reverse">
                <form class="form-inline" method="post">
                    <input type="hidden" id="addToCartProductID" value="@product.IdProduct" />
                    <input type="hidden" id="addToCartProductMaxQTY" value="@totalUnitsAvailable" />

                    <input type="number" class="form-control mr-3" value="0" id="addToCartQuantity" />
                    <input type="button" class="btn btn-primary" value="Add to cart" data-toggle="modal" data-target="#addToCartModal" />
                </form>
            </div>
        </div>

        @if (product.PdfFile != null) {
            <hr />

            <div class="row">
                <div style="height: 1135px" class="col-12">
                    <object style="width: 100%; height: 100%" type="application/pdf" data="@product.PdfFile#toolbar=0&navpanes=0&scrollbar=0"></object>
                </div>
            </div>
        } else {
            <hr />

            <div class="row">
                <div class="col-12 text-center text-muted">
                    <i>no PDF description available</i>
                </div>
            </div>
        }
    </div>
} else if (!(ViewBag.Product is Products)) {
    <div class="container py-3 col-12 bg-danger text-center font-weight-bold">
        No product data available <br />
        Pass it to this view via <code class="text-light">ViewBag.Product</code>
    </div>
} else if (!(ViewBag.Stocks is List<Stocks>)) {
    <div class="container py-3 col-12 bg-danger text-center font-weight-bold">
        No stocks list available <br />
        Pass it to this view via <code class="text-light">ViewBag.Stocks</code> (as List)
    </div>
} else if (!(ViewBag.Units is List<Units>)) {
    <div class="container py-3 col-12 bg-danger text-center font-weight-bold">
        No units list available <br />
        Pass it to this view via <code class="text-light">ViewBag.Units</code> (as List)
    </div>
}

@section CheckUserLogged {
    @{
        await Html.RenderPartialAsync("~/Views/PartialViews/NavBarUser.cshtml");
    }
}